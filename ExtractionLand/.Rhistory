library(tidyverse)
library(lubridate)
library(jsonlite)
demo <- data.frame(Participant_ID = character(),
Gender = character(),
Age = numeric(),
Ethnicity = character(),
stringsAsFactors = FALSE)
participant <- "auz_test_phas1.json"
# Function to capitalize the first letter of a string
capitalize_first <- function(x) {
paste0(toupper(substr(x, 1, 1)), substr(x, 2, nchar(x)))
}
# Load file
data <- fromJSON(paste0("pilots/beh/", participant), flatten = TRUE)
# Load file
data <- fromJSON(paste0( participant), flatten = TRUE)
# Load file
data <- fromJSON(paste0(participant), flatten = TRUE)
# Load file
data <- fromJSON(paste0("pilots/beh/", participant), flatten = TRUE)
participant <- "auz_test_phase1.json"
# Load file
data <- fromJSON(paste0("pilots/beh/", participant), flatten = TRUE)
# Find participant ID
participant_id <- data[!is.na(data$screen) & data$screen == "participant_info", "response"][[1]]$Participant_ID
# Find demographic information from "demographics" screen
demographic_response <- data[!is.na(data$screen) & data$screen == "demographics", "response"][[1]]
# Find gender, age, and ethnicity
gender <- demographic_response$gender
gender <- capitalize_first(gender)
gender <- ifelse(gender %in% c("Nonbinary", "Non_binary", "Non-binary"), "Other", gender)
if (!gender %in% c("Female", "Male", "Other")) {
stop(paste("Manually assign gender:", gender))
}
age <- as.numeric(demographic_response$age)
if (!is.na(age) && (age < 18 || age > 85)) {
stop("Manually assign age")
}
ethnicity <- demographic_response$ethnicity
ethnicity <- capitalize_first(ethnicity)
valid_ethnicities <- c(
"White",
"English / Welsh / Scottish / Northern Irish / British",
"Irish",
"Gypsy or Irish Traveller",
"Any other White background",
"Mixed / Multiple ethnic groups",
"White and Black Caribbean",
"White and Black African",
"White and Asian",
"Any other Mixed / Multiple ethnic background",
"Asian / Asian British",
"Indian",
"Pakistani",
"Bangladeshi",
"Chinese",
"Any other Asian background",
"Black / African / Caribbean / Black British",
"African",
"Caribbean",
"Any other Black / African / Caribbean background",
"Other ethnic group",
"Arab",
"Any other ethnic group"
)
if (!ethnicity %in% valid_ethnicities) {
stop("Manually assign ethnicity")
}
# Save
demo <- rbind(demo, data.frame(
Participant_ID = participant_id,
Gender = gender,
Age = age,
Ethnicity = ethnicity
))
# Loop through participants
for (participant in participants) {
# Load file
data <- fromJSON(paste0("pilots/beh/", participant), flatten = TRUE)
# Find participant ID
participant_id <- data[!is.na(data$screen) & data$screen == "participant_info", "response"][[1]]$Participant_ID
# Find demographic information from "demographics" screen
demographic_response <- data[!is.na(data$screen) & data$screen == "demographics", "response"][[1]]
# Find gender, age, and ethnicity
gender <- demographic_response$gender
gender <- capitalize_first(gender)
gender <- ifelse(gender %in% c("Nonbinary", "Non_binary", "Non-binary"), "Other", gender)
if (!gender %in% c("Female", "Male", "Other")) {
stop(paste("Manually assign gender:", gender))
}
age <- as.numeric(demographic_response$age)
if (!is.na(age) && (age < 18 || age > 85)) {
stop("Manually assign age")
}
ethnicity <- demographic_response$ethnicity
ethnicity <- capitalize_first(ethnicity)
valid_ethnicities <- c(
"White",
"English / Welsh / Scottish / Northern Irish / British",
"Irish",
"Gypsy or Irish Traveller",
"Any other White background",
"Mixed / Multiple ethnic groups",
"White and Black Caribbean",
"White and Black African",
"White and Asian",
"Any other Mixed / Multiple ethnic background",
"Asian / Asian British",
"Indian",
"Pakistani",
"Bangladeshi",
"Chinese",
"Any other Asian background",
"Black / African / Caribbean / Black British",
"African",
"Caribbean",
"Any other Black / African / Caribbean background",
"Other ethnic group",
"Arab",
"Any other ethnic group"
)
if (!ethnicity %in% valid_ethnicities) {
stop("Manually assign ethnicity")
}
# Save
demo <- rbind(demo, data.frame(
Participant_ID = participant_id,
Gender = gender,
Age = age,
Ethnicity = ethnicity
))
}
View(demo)
