---
title: "Descriptive Statistics"
format: html
execute:
  cache: true
editor_options:
  chunk_output_type: console
---

## Descriptive Statistics


```{r}
#| output: false
library(tidyverse)
library(easystats)
library(ggplot2)
library(scales)

# setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
dfsub <- read.csv("../data/data_Participants.csv")
df <- read.csv("../data/data_IllusionGame.csv")
```


## Induction Effect 

### Subjective

```{r}
dfsub |> 
  select(participant_id, Condition, starts_with("Induction")) |> 
  pivot_longer(-all_of(c("participant_id", "Condition"))) |> 
  mutate(label = case_when(
    name == "Induction_Q1" ~ "Did you follow the audio instructions?",
    name == "Induction_Q2" ~ "Do you feel like you were in a different mental state at the end of the audio instructions?",
    name == "Induction_Q3" ~ "Do you feel like you could remain in this state when the illusion game began?",
    name == "Induction_Q4" ~ "Do you feel like you were (still) in a different mental state throughout most of the illusion game?",
    TRUE ~ "In general, do you feel like your performance (as compared to the first time) at the illusion game was impacted by the instructions?"
  )) |> 
  ggplot(aes(x = value, y = label, fill = Condition)) +
  geom_bar(aes(group=participant_id), stat = "identity", position = "dodge") +
  scale_x_continuous(breaks = c(0, 0.5, 1), 
                     labels = c("0% (Not at all)", "50%", "100% (Totally)"), 
                     limits = c(0, 1)) +
  scale_y_discrete(labels = label_wrap(50))+
  theme(axis.title.x = element_blank(),
        axis.title.y = element_blank(),
    axis.text.y = element_text(hjust = 1),  # Adjust horizontal alignment of y-axis labels
    axis.ticks.y = element_blank(),  # Hide y-axis ticks
    legend.position = "bottom"  # Move the legend to the bottom
  ) 
```

### Objective

```{r}
df <- df %>%
  mutate(Condition = case_when(
    Condition == "Materials/Mindfulness.mp3" ~ "Mindfulness",
    Condition == "Materials/Hypnosis.mp3" ~ "Hypnosis",
    TRUE ~ Condition
  ))

errors <- df |> 
  filter(Illusion_Effect == "Incongruent") |> 
  group_by(participant_id, Condition, Illusion_Type) |> 
  summarise(Error = mean(Error), .groups = 'keep') |> 
  # Below adds a column that contains the assigned manipulation condition
  full_join(
    df |> 
      filter(Condition != "Baseline") |> 
      group_by(participant_id) |> 
      slice(1) |> 
      select(participant_id, Color = Condition), 
    by="participant_id")



condition_labels <- c("Baseline", "Hypnosis", "Mindfulness")

errors |> 
  mutate(Error = Error * 100) %>%  # Convert error values to percentages
  ggplot(aes(x = Condition, y = Error, color = Color)) +
  geom_line(aes(group = participant_id)) +
  geom_point() +
  scale_x_discrete(labels = condition_labels) +
  scale_y_continuous(labels = scales::percent_format(scale = 1), limits = c(0, 100)) + 
  labs(color = "Manipulation Condition")+
  facet_grid(~Illusion_Type)
```
