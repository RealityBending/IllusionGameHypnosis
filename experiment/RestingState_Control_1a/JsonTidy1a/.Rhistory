library(tidyverse)
library(tidyverse)
library(tidyverse)
library(lubridate)
library(jsonlite)
library(here)  # Add the here package for correct file path handling
# Get the path to the "Pilots" folder (assuming the R script is in the same parent directory as "Pilots")
pilots_folder <- here("Pilots")
# Initialize data
data_questionnaire <- data.frame()
# List participants files
participants <- list.files(pilots_folder, full.names = TRUE)
# Reverse code function
reverse_code_item <- function(item) {
if (grepl("_R$", item)) {
# Reverse code the score
return(8 - item)  # Assuming Likert scale 1-7, reverse coding to 1-7 and then 8-score to reverse the order
} else {
return(item)
}
}
# IPIP6 dimensions (based on the JavaScript parameter file)
ipip6_dimensions <- c(
"Extraversion_1",
"Agreeableness_2",
"Conscientiousness_3",
"Neuroticism_4",
"Openness_5",
"HonestyHumility_6_R",
"Extraversion_7_R",
"Agreeableness_8_R",
"Openness_9_R",
"Conscientiousness_10",
"Conscientiousness_11_R",
"HonestyHumility_12_R",
"Openness_13_R",
"Agreeableness_14",
"Neuroticism_15_R",
"Neuroticism_16",
"Neuroticism_17_R",
"HonestyHumility_18_R",
"Extraversion_19_R",
"Agreeableness_20_R",
"Openness_21_R",
"Conscientiousness_22_R",
"Extraversion_23",
"HonestyHumility_24_R"
)
# Loop through participants
for (participant in participants) {
# Load file
data <- fromJSON(participant, flatten = TRUE)
# Extract Subject ID
subject_id <- data[!is.na(data$screen) & data$screen == "participant_info", "response"][[1]]$Participant_ID
# Extract demographics
demo <- data.frame(
Age = data[!is.na(data$screen) & data$screen == "agequestion", "response"][[1]]$age_response,
Gender = data[!is.na(data$screen) & data$screen == "genderquestion", "response"][[1]]$gender_response,
Race = data[!is.na(data$screen) & data$screen == "racequestion", "response"][[1]]$race_response
)
# Extract IPIP6 scores with reverse coding for corresponding dimensions
ipip6_scores <- data.frame()
for (dimension in ipip6_dimensions) {
# Get the item indices for the current dimension
item_indices <- which(grepl(paste0(dimension, "_"), names(data)))
# Reverse code the scores for specific items
data[, item_indices] <- sapply(data[, item_indices], reverse_code_item)
# Calculate the average score for the dimension
score <- mean(as.numeric(data[!is.na(data$screen) & data$screen == "ipip6_dimensions", item_indices]), na.rm = TRUE)
ipip6_scores <- bind_cols(ipip6_scores, data.frame(dimension = dimension, score = score))
}
# Combine dataframes and add to the main data frame
data_questionnaire <- bind_rows(data_questionnaire, cbind(Subject_ID = subject_id, demo, ipip6_scores))
}
# Write cleaned data to a CSV file with the Subject ID included in the filename
write.csv(data_questionnaire, paste0("cleaned_data_", Sys.Date(), "_", unique(data_questionnaire$Subject_ID), ".csv"), row.names = FALSE)
